@xlia< system , 1.0 >:

system<and> FreeFall {
	@machine:
		statemachine<or> Parachutist {
			
			@property:
				public var int checkListItemsChecked = 0;
			
			@region:
				state<initial> start_line {transition t_go --> gettingReady;}
				
				state<or> gettingReady {
					
					state<start> checking_buckle {
						transition t_ok --> checking_straps {checkListItemsChecked ++;}
					}
					state checking_straps {
						transition t_ok --> checking_helmet {checkListItemsChecked ++;}
					}
					state checking_helmet {
						transition t_huh --> i_dont_wanna_do_dis {checkListItemsChecked ++;}
					}
					
					state<terminal> i_dont_wanna_do_dis;
					
					// the t_jump also increment the checkListItemsChecked because
					// it is an outgoing transition for any of the three substates
					transition t_jump --> inFreeFall {checkListItemsChecked ++;}
				}
				
				state inFreeFall {
					transition t_open --> parachuting {guard checkListItemsChecked >= 3;}
					transition<else> t_u_died --> landed;
				}
				
				state parachuting{
					transition t_landing --> landed;
				}
				
				state<terminal> landed;
		}
}

