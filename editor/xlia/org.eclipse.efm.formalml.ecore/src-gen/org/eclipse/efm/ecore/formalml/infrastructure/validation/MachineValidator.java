/*******************************************************************************
 * Copyright (c) 2016 CEA LIST.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *  Arnault Lapitre (CEA LIST) arnault.lapitre@cea.fr
 *   - Initial API and Implementation
 *******************************************************************************/
/**
 *
 * $Id$
 */
package org.eclipse.efm.ecore.formalml.infrastructure.validation;

import org.eclipse.efm.ecore.formalml.datatype.DataType;

import org.eclipse.efm.ecore.formalml.infrastructure.Behavior;
import org.eclipse.efm.ecore.formalml.infrastructure.Buffer;
import org.eclipse.efm.ecore.formalml.infrastructure.Channel;
import org.eclipse.efm.ecore.formalml.infrastructure.DesignKind;
import org.eclipse.efm.ecore.formalml.infrastructure.InstanceMachine;
import org.eclipse.efm.ecore.formalml.infrastructure.Machine;
import org.eclipse.efm.ecore.formalml.infrastructure.Port;
import org.eclipse.efm.ecore.formalml.infrastructure.Procedure;
import org.eclipse.efm.ecore.formalml.infrastructure.PropertyDefinition;
import org.eclipse.efm.ecore.formalml.infrastructure.Routine;
import org.eclipse.efm.ecore.formalml.infrastructure.Signal;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link org.eclipse.efm.ecore.formalml.infrastructure.Machine}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface MachineValidator {
	boolean validate();

	boolean validateInput_enabled(boolean value);
	boolean validateTimed(boolean value);
	boolean validateDesign(DesignKind value);
	boolean validateMachine(EList<Machine> value);
	boolean validateTypedef(EList<DataType> value);
	boolean validateProperty(EList<PropertyDefinition> value);
	boolean validateChannel(EList<Channel> value);
	boolean validatePort(EList<Port> value);
	boolean validateSignal(EList<Signal> value);
	boolean validateBuffer(EList<Buffer> value);
	boolean validateRoutine(EList<Routine> value);
	boolean validateProcedure(EList<Procedure> value);
	boolean validateInstance(EList<InstanceMachine> value);
	boolean validateBehavior(EList<Behavior> value);
	boolean validateMain(Behavior value);
}
